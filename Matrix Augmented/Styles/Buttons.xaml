<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Matrix_Augmented">


	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Fonts.xaml"/>
		<ResourceDictionary Source="Colors.xaml"/>
	</ResourceDictionary.MergedDictionaries>

		<Style TargetType="Button" x:Key="BaseButtonStyle">
		<Setter Property="FontFamily" Value="{StaticResource LatoThin}"/>
		<Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
	</Style>




	<!-- Style for the buttons in the bottom menu -->
	<Style TargetType="Button" x:Key="MenuButtonStyle" BasedOn="{StaticResource BaseButtonStyle}">
		<Setter Property="Background" Value="{StaticResource VeryLightGrayBrush}" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="UseSystemFocusVisuals" Value="True" />
		<Setter Property="Margin" Value="5 8"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Storyboard>
										<PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
									</Storyboard>
								</VisualState>						

								<!-- Animations on pressed -->
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="RootGrid"
														Storyboard.TargetProperty="(RootGrid.Background).(SolidColorBrush.Color)"
														To="{StaticResource Gray}"
														Duration="0:0:0.1"
														/>
										<PointerDownThemeAnimation Storyboard.TargetName="RootGrid" Duration="0:0:0.05"/>
									</Storyboard>
								</VisualState>								
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="ContentPresenter"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Content="{TemplateBinding Content}"
                          ContentTransitions="{TemplateBinding ContentTransitions}"
                          ContentTemplate="{TemplateBinding ContentTemplate}"
                          Padding="{TemplateBinding Padding}"
                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                          AutomationProperties.AccessibilityView="Raw"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



	<!-- Style for the pseudo-button showning/collapsing the menu -->
	<Style TargetType="Button" x:Key="ShowMenuButton" BasedOn="{StaticResource BaseButtonStyle}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="UseSystemFocusVisuals" Value="True" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="RootGrid" Background="{TemplateBinding Background}">						
						<ContentPresenter x:Name="ContentPresenter"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Content="{TemplateBinding Content}"
                          ContentTransitions="{TemplateBinding ContentTransitions}"
                          ContentTemplate="{TemplateBinding ContentTemplate}"
                          Padding="{TemplateBinding Padding}"
                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                          AutomationProperties.AccessibilityView="Raw"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



	<!-- Style for the button in the top menu (add, delete, change matrix) -->
	<Style TargetType="Button" x:Key="TopMenuButton" BasedOn="{StaticResource BaseButtonStyle}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
		<Setter Property="BorderThickness" Value="0 0 0 2" />
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="UseSystemFocusVisuals" Value="True" />
		<Setter Property="FontFamily" Value="{StaticResource LatoBold}"/>
		<Setter Property="Margin" Value="5 0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Storyboard>
										<PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
									</Storyboard>
								</VisualState>
							
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GrayBrush}" />
										</ObjectAnimationUsingKeyFrames>									
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>										
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DarkRedBrush}" />
										</ObjectAnimationUsingKeyFrames>
										
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="ContentPresenter"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Content="{TemplateBinding Content}"
                          ContentTransitions="{TemplateBinding ContentTransitions}"
                          ContentTemplate="{TemplateBinding ContentTemplate}"
                          Padding="{TemplateBinding Padding}"
                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                          AutomationProperties.AccessibilityView="Raw"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>




</ResourceDictionary>
